name: Build and Release

on:
  push:
    tags:
      - 'v*.*'  # 监听以 v 开头的标签（例如 v1.0.0）

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Python 环境
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.1'  # 根据你的项目需求选择 Python 版本

      # 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # 打包项目
      - name: Build executable
        run: |
          pyinstaller main.spec

      # 打包成 zip 供发布
      - name: Archive build artifacts
        run: |
          mkdir dist_release
          mv dist/* dist_release/
          cp -r 3rdparty dist_release/AALC/
          cp -r pic dist_release/AALC/
          cp config.yaml dist_release/AALC/
          cp black_list_keyword.yaml dist_release/AALC/
          powershell Compress-Archive -Path dist_release\* -DestinationPath dist_release.zip

      # 上传构建产物
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist_release.zip

  release:
    needs: build
    runs-on: windows-latest
    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 下载构建产物
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      # 发布到 GitHub Releases
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist_release.zip
          asset_name: AALC-${{ github.ref_name }}.zip
          asset_content_type: application/zip